<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.shuxin.mapper.TumourDiagnosisMapper" >
 <resultMap id="TumourDiagnosisResultMap" type="java.util.Map">
    
       <result column="id" property="id" jdbcType="VARCHAR"/>
        <result column="diagnosis_code" property="diagnosisCode" jdbcType="VARCHAR"/>
        <result column="diagnosis_name" property="diagnosisName" jdbcType="VARCHAR"/>
        <result column="update_time" property="updateTime" jdbcType="VARCHAR"/>
        <result column="update_user" property="updateUser" jdbcType="VARCHAR"/>
          <result column="opt_type" property="optType" jdbcType="VARCHAR"/>
 </resultMap>
 <select id="findTumourDiagnosisDataGrid" resultMap="TumourDiagnosisResultMap"    >
   SELECT
        t.id ,
        t.diagnosis_code  ,
        t.diagnosis_name , 
        t.update_time,  
        t.update_user
 

        FROM
        t_tumour_diagnosis t
   
        <where>
            <if test=" diagnosisName!= null and diagnosisName != '' ">
                   t.diagnosis_name like '%${diagnosisName}%'
            </if>   
            <if test=" diagnosisCode != null and diagnosisCode != '' ">
               and  t.diagnosis_code like '%${diagnosisCode}%'
            </if>
           
        </where>
      order by update_time desc,diagnosis_code 
  </select> 

   <insert id="addTumourDiagnosisHistory">
   		insert into t_tumour_diagnosis_opt (ID ,DIAGNOSIS_CODE,DIAGNOSIS_NAME,CREATE_TIME,CREATE_USER,UPDATE_TIME,UPDATE_USER,opt_type)
   		select ID ,DIAGNOSIS_CODE,DIAGNOSIS_NAME,sysdate,#{loginName},sysdate,#{loginName},#{optType} from t_tumour_diagnosis
   		where id=#{id}
   </insert>
   
   <select id="selectDetailTumourDiagnosis" resultMap="TumourDiagnosisResultMap" >
     SELECT
        t.id ,
        t.diagnosis_code  ,
        t.diagnosis_name ,
         to_char(t.update_time,'yyyy-mm-dd hh24:mi:ss') update_time,
        t.update_user
 

        FROM
       t_tumour_diagnosis t
        
        order by  t.update_time desc,t.diagnosis_code
   
   </select>
   <select id="selecTumourDiagnosisHistory" resultMap="TumourDiagnosisResultMap" >
     SELECT
        t.id ,
        t.diagnosis_code  ,
        t.diagnosis_name ,
        to_char(t.update_time,'yyyy-mm-dd hh24:mi:ss') update_time,
        t.update_user,
         t.opt_type
       
        FROM
        t_tumour_diagnosis_opt t
        
        order by  t.update_time desc,t.diagnosis_code
   
   </select>
       <update id="daoruData">
	begin
		<foreach collection="list" item="option" index="index" >
		    insert into t_tumour_diagnosis_opt (id,diagnosis_code,diagnosis_name,opt_type,create_time,create_user,update_time,update_user)
			select id,diagnosis_code,diagnosis_name,'导入更新' opt_type, sysdate create_time,#{loginName} create_user,sysdate update_time,#{loginName} update_user
			from  t_tumour_diagnosis  where diagnosis_code =#{option.field0};
	
            insert into t_tumour_diagnosis_opt(id,diagnosis_code,diagnosis_name,opt_type,create_time,create_user,update_time,update_user)
            select id,diagnosis_code,diagnosis_name,'导入新增' opt_type,sysdate create_time,#{loginName} create_user,sysdate update_time,#{loginName} update_user from
            (select #{option.field2} id, #{option.field0} diagnosis_code,#{option.field1} diagnosis_name from dual) t where not exists
			(select 1 from t_tumour_diagnosis t1 where t1.diagnosis_code=t.diagnosis_code);
                       
            
            merge into t_tumour_diagnosis t1
            using (select #{option.field0} diagnosis_code,#{option.field1} diagnosis_name  from dual) t2
            on (t1.diagnosis_code=t2.diagnosis_code)
            WHEN MATCHED THEN
               update set t1.diagnosis_name=t2.diagnosis_name,
                        t1.update_time=sysdate,t1.update_user=#{loginName}
            WHEN NOT MATCHED THEN
               insert (id,diagnosis_code,diagnosis_name,create_time,create_user,update_time,update_user)
               VALUES
              (#{option.field2},#{option.field0},#{option.field1},sysdate,#{loginName},sysdate,#{loginName});
            
        </foreach>
	end;
</update>

<select id="selectTumourDiagnosisCount" resultType="java.lang.Integer">
	select count(1) from t_tumour_diagnosis t
	where t.DIAGNOSIS_CODE in
	<foreach item="id" index="index" collection="list" open="(" separator="," close=")">  
            #{id}
     </foreach>
</select>

</mapper>